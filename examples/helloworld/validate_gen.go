// Code generated by validate; DO NOT EDIT.
// github.com/protogodev/validate

package helloworld

import (
	"context"
	"regexp"

	v "github.com/RussellLuo/validating/v3"
)

func ValidateMiddleware(wrap func(error) error) func(Service) Service {
	return func(next Service) Service {
		if wrap == nil {
			wrap = func(err error) error { return err }
		}
		return validateMiddleware{
			next: next,
			wrap: wrap,
		}
	}
}

type validateMiddleware struct {
	next Service
	wrap func(error) error
}

func (mw validateMiddleware) SayHello(ctx context.Context, name string) (string, error) {
	schema := v.Schema{
		v.F("name", name): v.All(v.LenString(0, 10).Msg("bad length"), v.Match(regexp.MustCompile(`^\w+$`)).Msg("invalid format")),
	}

	if err := v.Validate(schema); err != nil {
		return "", mw.wrap(err)
	}

	return mw.next.SayHello(ctx, name)
}
